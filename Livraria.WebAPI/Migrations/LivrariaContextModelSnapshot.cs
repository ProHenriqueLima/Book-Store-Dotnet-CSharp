// <auto-generated />
using Livraria.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Livraria.WebAPI.Migrations
{
    [DbContext(typeof(LivrariaContext))]
    partial class LivrariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Livraria.WebAPI.Models.Aluguel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Data_Aluguel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Entrega")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<string>("Previsao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LivroId");

                    b.ToTable("Alugueis");
                });

            modelBuilder.Entity("Livraria.WebAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CidadeCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EnderecoCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Livraria.WebAPI.Models.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CidadeEditora")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NameEditora")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("Livraria.WebAPI.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AutorLivro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EditoraID")
                        .HasColumnType("int");

                    b.Property<string>("LancamentoLivro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NomeLivro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EditoraID");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Livraria.WebAPI.Models.Aluguel", b =>
                {
                    b.HasOne("Livraria.WebAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Livraria.WebAPI.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Livraria.WebAPI.Models.Livro", b =>
                {
                    b.HasOne("Livraria.WebAPI.Models.Editora", "Editora")
                        .WithMany()
                        .HasForeignKey("EditoraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
